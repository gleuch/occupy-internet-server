= erb :widget

:css
  #occupy-widget { visibility: hidden; /* it toggles display none on itself */ }

#occupy-customize{:class => 'occupy-widget', :style => request.path == '/customize' ? '' : 'display: none;'}
  #introduction
    %strong Occupy Internet
    %ol
      %li
        Pick an avatar below, or specify a custom
        <a href="http://fffff.at/enlist-today">protest .gif</a>
      %li
        Visit a participating website like
        == <a href='http://fffff.at'>fffff.at</a>
        or
        == <a href='http://jamiew.tumblr.com'>jamiew.tumblr.com</a>
      %li
        Install the Occupy Internet embed code on your website
        %textarea#embed_code{:rows => 2, :cols => 100, :readonly => 'readonly', :click => "this.select()"}
          == <script src="http://#{request.host_with_port}/embed.js"></script>


  #signage
    %form{:method => 'POST', :action => '/settings'}
      %label{:for => 'custom_avatar'}
        %strong Custom image URL
      %input{:type => 'text', :name => 'custom_avatar', :value => request_custom_avatar, :class => 'text', :id => 'custom_avatar', :onclick => "this.select();"}
      %input{:type => 'hidden', :name => 'redirect_to', :value => @redirect_to }
      %input{:type => 'submit', :value => "Save", :class => 'submit', :id => 'save'}
      %p More images on <a href="http://fffff.at">fffff.at/enlist-today</a>

      - if false
        %br{:style => 'clear: both;'}
        %label{:for => 'tagline'}
          Tagline (speech bubble)
        %input{:type => 'text', :value => request_custom_avatar, :name => 'custom_avatar', :class => 'text', :id => 'custom_avatar', :onclick => "this.select();"}
        %input{:type => 'submit', :value => "Save", :class => 'submit', :id => 'save'}

  #avatars
    / %a{:href => '#', :onclick => 'toggle_customize(); return false;', :style => 'float: right; color: #aaa;'} [CLOSE]
    / %h2 Choose Your Avatar
    - User.default_avatars.each do |i|
      -# Note: using index and not raw value for backwards compat
      - avatar = "http://#{request.host_with_port}/avatars/#{i}"
      .avatar
        - redirect = @redirect_to ? "&redirect_to=#{@redirect_to}" : nil
        %a{:href => "/settings?avatar=#{i}#{redirect}", :class => (i.to_s == request_avatar.to_s ? 'selected' : '')}
          %img{:src => avatar}
